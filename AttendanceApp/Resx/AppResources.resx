<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aboutus" xml:space="preserve">
    <value>About us</value>
  </data>
  <data name="approveLeaves" xml:space="preserve">
    <value>Approve Leaves</value>
  </data>
  <data name="approveReasons" xml:space="preserve">
    <value>Approve Reasons</value>
  </data>
  <data name="arabicLbl" xml:space="preserve">
    <value>Arabic</value>
  </data>
  <data name="authenticatingUser" xml:space="preserve">
    <value>Authenticating user...</value>
  </data>
  <data name="changePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="checkInCheckOut" xml:space="preserve">
    <value>Check In/Check Out</value>
  </data>
  <data name="close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="comingCheckIn" xml:space="preserve">
    <value>Coming (Check IN)</value>
  </data>
  <data name="configurations" xml:space="preserve">
    <value>Configurations</value>
  </data>
  <data name="configurationSettings" xml:space="preserve">
    <value>Configuration Settings</value>
  </data>
  <data name="configurationURL" xml:space="preserve">
    <value>Configuration URL</value>
  </data>
  <data name="confirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="currentPassword" xml:space="preserve">
    <value>Current Password</value>
  </data>
  <data name="dashborad" xml:space="preserve">
    <value>Dashborad</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="directManager" xml:space="preserve">
    <value>Direct Manager</value>
  </data>
  <data name="endTime" xml:space="preserve">
    <value>End Time</value>
  </data>
  <data name="enterUrl" xml:space="preserve">
    <value>Enter Url</value>
  </data>
  <data name="ErrorLoadingData" xml:space="preserve">
    <value>Error Loading Data</value>
  </data>
  <data name="fromDate" xml:space="preserve">
    <value>From Date</value>
  </data>
  <data name="ganterTASystem" xml:space="preserve">
    <value>Ganter TA System</value>
  </data>
  <data name="happy" xml:space="preserve">
    <value>Happy</value>
  </data>
  <data name="invalidUserDetails" xml:space="preserve">
    <value>Invalid User Details</value>
  </data>
  <data name="language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="leaveRequest" xml:space="preserve">
    <value>Leave Request</value>
  </data>
  <data name="leavingCheckOut" xml:space="preserve">
    <value>Leaving (Check Out)</value>
  </data>
  <data name="loginBtn" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="loginLbl" xml:space="preserve">
    <value>LOGIN</value>
  </data>
  <data name="logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="moreSettings" xml:space="preserve">
    <value>More Settings</value>
  </data>
  <data name="myAttendance" xml:space="preserve">
    <value>My Attendance</value>
  </data>
  <data name="neutral" xml:space="preserve">
    <value>Neutral</value>
  </data>
  <data name="newPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="pleaseCheckYourNetworkConnection" xml:space="preserve">
    <value>Please check your network connection.</value>
  </data>
  <data name="pleaseChooseDirection" xml:space="preserve">
    <value>Please choose direction</value>
  </data>
  <data name="pleaseChooseFunction" xml:space="preserve">
    <value>Please choose a function</value>
  </data>
  <data name="pleaseEnableYourLocationService" xml:space="preserve">
    <value>Please enable your location service.</value>
  </data>
  <data name="pleaseProvidePassword" xml:space="preserve">
    <value>Please provide Password.</value>
  </data>
  <data name="pleaseProvideUserName" xml:space="preserve">
    <value>Please provide User Name.</value>
  </data>
  <data name="pleaseSelectHappinessOption" xml:space="preserve">
    <value>Please select happiness option</value>
  </data>
  <data name="pleaseSelectReason" xml:space="preserve">
    <value>Please select reason</value>
  </data>
  <data name="pleaseWait" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="reason Request" xml:space="preserve">
    <value>Reason Request</value>
  </data>
  <data name="reasonDate" xml:space="preserve">
    <value>Reason Date</value>
  </data>
  <data name="reasonRequest" xml:space="preserve">
    <value>Reason Request</value>
  </data>
  <data name="reasons" xml:space="preserve">
    <value>Reasons</value>
  </data>
  <data name="reasonType" xml:space="preserve">
    <value>Reason Type</value>
  </data>
  <data name="remarks" xml:space="preserve">
    <value>Remarks</value>
  </data>
  <data name="rememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="resetPassword" xml:space="preserve">
    <value>Reset Password</value>
  </data>
  <data name="sad" xml:space="preserve">
    <value>Sad</value>
  </data>
  <data name="search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="startTime" xml:space="preserve">
    <value>Start Time</value>
  </data>
  <data name="submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="successfully" xml:space="preserve">
    <value>successfully</value>
  </data>
  <data name="test" xml:space="preserve">
    <value>Test</value>
  </data>
  <data name="timeIn" xml:space="preserve">
    <value>Time In</value>
  </data>
  <data name="timeOut" xml:space="preserve">
    <value>Time Out</value>
  </data>
  <data name="toDate" xml:space="preserve">
    <value>To Date</value>
  </data>
  <data name="unjustifiedViolations" xml:space="preserve">
    <value>Unjustified Violations</value>
  </data>
  <data name="updatePassword" xml:space="preserve">
    <value>Update Password</value>
  </data>
  <data name="userName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="vacationBalance" xml:space="preserve">
    <value>Vacation Balance</value>
  </data>
  <data name="visualStudio" xml:space="preserve">
    <value>Visual Studio</value>
  </data>
  <data name="youAreChecked" xml:space="preserve">
    <value>You are Checked</value>
  </data>
  <data name="youAreInLocation" xml:space="preserve">
    <value>You are in location</value>
  </data>
  <data name="youAreOutOfLocation" xml:space="preserve">
    <value>You are out of location</value>
  </data>
</root>